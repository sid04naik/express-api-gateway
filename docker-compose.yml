services:
  server:
    container_name: api-gateway
    build:
      context: .
    ports:
      - "${PORT}:8002"
    volumes:
      - .:/usr/src/app
    environment:
      - NODE_ENV=${ENV}
    restart: on-failure
    networks:
      - bridge
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - server
    volumes:
      - ${CONF_PATH}/nginx.conf:/etc/nginx/nginx.conf
      - /var/log/logs/nginx:/var/log/nginx
    networks:
      - bridge
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${DATA_PATH}/redis:/data
    networks:
      - bridge
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - ${DATA_PATH}/grafana:/var/lib/grafana
    networks:
      - bridge
  loki:
    container_name: loki
    image: grafana/loki:latest
    user: root
    ports:
      - "${LOKI_PORT}:3100"
    volumes:
      - ${CONF_PATH}/loki.yaml:/etc/loki/local-config.yaml
      - ${DATA_PATH}/loki:/tmp
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - bridge
  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    # user: root
    ports:
      - "${PRMOTAIL_PORT}:9080"
    volumes:
      - ${CONF_PATH}/promtail.yaml:/etc/promtail/config.yaml
      - ${DATA_PATH}/promtail/tmp:/tmp
      - /var/log:/var/log
    depends_on:
      - loki
    command: -config.file=/etc/promtail/config.yaml
    restart: unless-stopped
    networks:
      - bridge
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ${CONF_PATH}/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${DATA_PATH}/prometheus:/prometheus
    networks:
      - bridge
  influxdb:
    image: influxdb:1.8
    container_name: influxdb_v1
    ports:
      - "${INFLUXDB_PORT}:8086"
    environment:
      INFLUXDB_DB: ${INFLUXDB_NAME}
      INFLUXDB_ADMIN_USER: ${INFLUXDB_USER}
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_PASSWORD}
    volumes:
      - ${DATA_PATH}/influxdb:/var/lib/influxdb
    networks:
      - bridge
networks:
  bridge:
    driver: bridge
    attachable: true
  default:
    name: none
